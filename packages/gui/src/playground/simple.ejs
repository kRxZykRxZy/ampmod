<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <title><%= htmlWebpackPlugin.options.title %></title>
            <% 
          /* Stolen from librekitten lol
            https://codeberg.org/LibreKitten/LibreKitten/commit/87f1b2d934aa228829ee3179fb226c411d969fba#diff-4913fa303beb5bc166ede94c92bb244f9ed68cef */
          [
            require('@fontsource-variable/inter/files/inter-latin-wght-normal.woff2'),
            require('@fontsource-variable/inter/files/inter-latin-ext-wght-normal.woff2'),
          ].map(font => { %>
            <link 
              rel="preload"
              href="<%= font %>"
              as="font"
              type="font/woff2"
            >
        <% }); %>
        <% if (htmlWebpackPlugin.options.description) { %>
          <% /* SEO to try and battle outdated GitHub mirrors. */ %>
          <meta name="description" content="<%= htmlWebpackPlugin.options.description %>" />
          <meta property="og:title" content="<%= htmlWebpackPlugin.options.title %>">
          <meta property="og:description" content="<%= htmlWebpackPlugin.options.description %>">
          <meta property="og:type" content="website">
          <meta name="twitter:card" content="summary_large_image">
          <meta name="twitter:title" content="<%= htmlWebpackPlugin.options.title %>">
          <meta name="twitter:description" content="<%= htmlWebpackPlugin.options.description %>">
          <meta name="twitter:image" content="/images/card.png">
        <% } %>
        <link rel="canonical" href="https://ampmod.codeberg.page">
        <% if (htmlWebpackPlugin.options.isCbp) { %>
          <% /* If you are forkimg, you will need to remove or replace google-site-verification,
           and if you don't use Simple Analytics you will want to remove or replace that script too. */ %>
          <meta name="google-site-verification" content="xMC75_ZeQyXE1iaRV31N-hOLPJVubcfmiKfoiOqcNH8" /> 
          <script>
          (function() {
            var lsNamespace = "<%= require('../lib/amp-localstorage-namespace.js').lsNamespace %>";
            const optedOut = localStorage.getItem(`${lsNamespace}:analytics-opted-out`) === 'true';

            if (!optedOut && <%= !htmlWebpackPlugin.options.skipSimpleAnalytics %>) {
              const script = document.createElement('script');
              script.async = true;
              script.src = 'https://scripts.simpleanalyticscdn.com/latest.js';
              document.head.appendChild(script);
            }
          })();
        </script>
        <% } else { %>  
          <meta name="robots" content="noindex, nofollow">
        <% } %>
        <% if (htmlWebpackPlugin.options.page) { %>
        <script>
          window.__PAGE__ = "<%= htmlWebpackPlugin.options.page %>";
        </script>
        <% } %>
        <style>
            body[data-splash-theme="dark"] {
                background: #111;
            }
            body[data-splash-theme="amoled"], body[data-splash-theme="high-contrast"] {
                background: #000;
            }
            .splash-custom-info[hidden] {
                display: none;
            }
            .splash-custom-info {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                padding: 20px;
                border-radius: 8px;
                background: #59c059;
                color: white;
                font-family: "Inter Variable", sans-serif;
                font-weight: bold;
                text-align: center;
            }
            .splash-custom-info * {
              vertical-align: middle;
            }
            .splash-custom-info a {
                color: white;
            }
        </style>
    </head>
    <body>
        <noscript>
            <div class="splash-custom-info"><img src="<%= require('../components/menu-bar/tw-error.svg') %>" draggable="false" loading="lazy" height="30" /> <%= htmlWebpackPlugin.options.APP_NAME %> requires JavaScript.</div>
        </noscript>

        <div class="splash-custom-info" hidden><img src="<%= require('../components/menu-bar/icon--settings.svg') %>" draggable="false" loading="lazy" height="30" /> <span class="splash-custom-info-text"></span></div>

        <div id="app"></div>

        <script>
            (function() {
              var theme = '';

              var lsNamespace = "<%= require('../lib/amp-localstorage-namespace.js').lsNamespace %>";

              var themeSetting = localStorage.getItem(`${lsNamespace}theme`);

              if (themeSetting === 'light') {
                theme = 'light';
              } else if (themeSetting === 'dark') {
                theme = 'dark';
              } else if (themeSetting) {
                try {
                  var parsed = JSON.parse(themeSetting);
                  theme = parsed.gui;
                } catch (e) {
                  // ignore
                }
              }

              if (!theme) {
                theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
              }

              document.body.setAttribute('data-splash-theme', theme);
            })();
        </script>

        <script>
            // Check every 0.3 seconds if the app is in minimal-ui mode (PWA).
            setInterval(function () {
                if (window.matchMedia("(display-mode: minimal-ui)").matches) {
                    // If in minimal-ui mode, redirect to /editor.html.
                    window.location.href = "/editor.html";
                }
            }, 300);

            var splashCustomInfo = document.querySelector(
                ":not(noscript) .splash-custom-info"
            );
            var splashCustomInfoText = document.querySelector(
                ".splash-custom-info-text"
            );
            window.SetCustomSplashInfo = text => {
                splashCustomInfo.hidden = false;
                splashCustomInfoText.innerHTML = text;
            };
            window.SplashEnd = () => {
                splashCustomInfo.parentNode.removeChild(splashCustomInfo);
            };
        </script>
    </body>
</html>
